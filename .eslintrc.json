{
    "env": {
        "es2021": true,
        "node": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": ["@typescript-eslint"],
    "rules": {
        "linebreak-style": ["error", "unix"],
        "quotes": ["error", "single", { "avoidEscape": true }],
        "semi": "off",
        "no-var": "error",
        "default-case-last": "error",
        "max-len": [
            "error",
            {
                "code": 120,
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true,
                "ignoreUrls": true
            }
        ],
        "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
        "camelcase": "off",
        "require-await": "error",
        "@typescript-eslint/no-dupe-class-members": ["error"],
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            { "accessibility": "explicit" }
        ],
        "@typescript-eslint/explicit-module-boundary-types": ["error"],
        "@typescript-eslint/no-inferrable-types": [
            "error",
            { "ignoreParameters": true }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "format": ["strictCamelCase"]
          },
          {
            "selector": "parameter",
            "format": ["strictCamelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "classProperty",
            "modifiers": ["private"],
            "format": ["strictCamelCase"],
            "leadingUnderscore": "require"
          },
          {
            "selector": "classMethod",
            "modifiers": ["private"],
            "format": null
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
              "selector": "enumMember",
              "format": ["PascalCase"]
          }
        ]
    }
}
